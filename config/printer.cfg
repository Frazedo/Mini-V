[include mainsail.cfg]
[include printer_toolhead_ebb36_revo_lgx.cfg]
[include reshelper.cfg]
[include K-ShakeTune/*.cfg]

[mcu]
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
## Note for CAN bridge mode, UUID usually doesn't change, is it always 183fbc1d936f?

#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_4A00290012504B4B38383620-if00
#canbus_uuid: be31d2e5af35 # CM4 EMMC 1G RAM, no wifi
canbus_uuid: 183fbc1d936f # CM4 EMMC 2G RAM, wifi
#canbus_uuid: 183fbc1d936f # CB1
[auto_speed]
accel_max: 40000.0
velocity_max: 4000.0

[exclude_object]
[gcode_arcs]
resolution: 0.1

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor e3ez]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 15000 #we can go up to 10k latest IS results
max_z_velocity: 15 		
max_z_accel: 120
square_corner_velocity: 5.0

[input_shaper]
shaper_type_x: mzv
shaper_freq_x: 46.8
shaper_type_y: mzv
shaper_freq_y: 30.6

# 3dp-mini-v-1
# 10/14/2023 x-mzv46.8 y-3hump_ei63.8 loose belts
# 10/12/2023 x-mzv65.2 y-2hump_ei69.8

# 8/31/2023 x-mzv61.6 y-3hump_ei77.6
# 8/20/2023 x-mzv66.2 y-mzv45.8
# 7/12/2023 ampon x-mzv70.0 y-mzv58.2
# 7/3/2023 ampon x-mzv62.8 y-2hump_ei68
# 6/28/2023 x-mzv69.6 y-2hump_ei67.0
# 6/7/2023 x-mzv63.0 y-2hump_ei68.5
# May2023 x-mzv71.8 y-3hump_ei78.8
# May2023 x-mzv79.4 y-mzv68.0
# May2023 x-mzv71.8 y-3hump_ei78.8
# May2023 x-mzv69.6 y-2hump_ei76.6


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##  B Stepper - Left
##	Connected to MOTOR_0
##  Endstop connected to DIAG_0

step_pin: PA14
dir_pin: !PA10
enable_pin: !PA13
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper

endstop_pin: tmc5160_stepper_x:virtual_endstop #^PC4
position_endstop: 180
position_min: 0
position_max: 180
homing_speed: 60   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_x]
cs_pin: PB8
spi_software_miso_pin: PC11
spi_software_mosi_pin: PC12
spi_software_sclk_pin: PC10
diag1_pin: ^!PC4 #PF3 #PC4?
run_current: 1.1
#stealthchop_threshold: 999999
interpolate: false
#driver_SGTHRS: 65 #45 #85 #58 #34
driver_SGT: 3


[stepper_y]
##  A Stepper - Right
step_pin: PC8
dir_pin: !PA15
enable_pin: !PC14

rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper

endstop_pin: tmc5160_stepper_y:virtual_endstop #^PB0
position_endstop: 180
position_min: 0
position_max: 180
homing_speed: 60
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_y]
cs_pin: PC9
spi_software_miso_pin: PC11
spi_software_mosi_pin: PC12
spi_software_sclk_pin: PC10
diag1_pin: ^!PB0 #^!PF4 #PB0?
run_current: 1.1
#stealthchop_threshold: 999999
interpolate: false
#driver_SGTHRS: 65 #45 #105
driver_SGT: 2

#####################################################################
# 	Z Stepper Settings
#####################################################################

#[safe_z_home]
#home_xy_position: 90,90
#speed: 150
#z_hop: 10

[stepper_z]
step_pin: PD5
dir_pin: PD6
enable_pin: !PB3
microsteps: 128
rotation_distance: 8
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

endstop_pin: probe:z_virtual_endstop # ^PC6
position_max: 180
position_min: -2.5
homing_speed: 5 # 4.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 1


##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD1
run_current: 0.37
interpolate: false
stealthchop_threshold: 999999

##	Z1 Stepper - Rear Z Motor
##	E0 Stepper Socket
[stepper_z1]
step_pin: PD2
dir_pin: PD4
enable_pin: !PD3
microsteps: 128
rotation_distance: 8	
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD0
run_current: 0.37
interpolate: false
stealthchop_threshold: 999999


##	Z2 Stepper - Right Rear Z Motor
##	E1 Stepper Socket
[stepper_z2]
step_pin: PB7
dir_pin: PB6
enable_pin: !PB4		
microsteps: 128
rotation_distance: 8	
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 stepper_z2]
uart_pin: PB5
run_current: 0.37
interpolate: false
stealthchop_threshold: 999999

[homing_override]
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
  
    G90
    G1 X93 Y103 F5000
    G28 Z
    G1 Z10
  {% endif %}

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - PA1
##  Thermistor - TB
heater_pin: PB11 #PB2 
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA3 
##	Adjust Max Power so your heater doesn't warp your bed
##  A good starting point is 0.4 W/cm^2
#max_power: 0.95
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 37.715
#pid_ki: 1.890
#pid_kd: 188.105

#6/1/2023 70% 300w bed pid_Kp=37.715 pid_Ki=1.890 pid_Kd=188.105
#31.305 pid_Ki=2.485 pid_Kd=98.611


#####################################################################
#   Probe
#####################################################################
[probe]
pin: ^can0:PB6
x_offset: 0
y_offset: 0
#z_offset: -1.390
speed: 6
samples: 3
sample_retract_dist: 1
lift_speed: 8
samples_result: median
samples_tolerance: 0.015
samples_tolerance_retries: 5
activate_gcode:
    {% set PROBE_TEMP = 155 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
# 	Fan Control
#####################################################################
#PA8 Fan0
#PB15 Fan1
#PB14 Fan2

[fan_generic ebay_fan]
pin: PA8 # PB15 or PB14
kick_start_time: 2.0
max_power: 1.0
off_below: 0.50

#[led top_lights]
#white_pin: PB10
#initial_WHITE: 0.5

[idle_timeout]
timeout: 3000 # 1800


#####################################################################
# 	Displays
#####################################################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC1, EXP1_3=PC3, EXP1_5=PC0, EXP1_7=PA2, EXP1_9=<GND>,
    EXP1_2=PC2,  EXP1_4=<RST>, EXP1_6=PA0, EXP1_8=PA1, EXP1_10=<5V>

    

#####################################################################
# 	Macros
#####################################################################
[z_tilt]
z_positions: # bed pivot points, you can easily check since they are directly above screw holes
	7, 48
	93, 177
	177, 48
points: # nozzle probe points
	17, 48
	93, 167
	167, 48
speed: 200
horizontal_move_z: 3
retries: 4
retry_tolerance: 0.0075



[bed_mesh]
speed: 300
mesh_min: 15,15
mesh_max: 165,165
probe_count: 5,5
# relative_reference_index: 12

[gcode_macro LOAD_FILAMENT]
gcode:
    G1 E50 F240
    G1 E50 F240
    G1 E50 F240
    G1 E50 F240

[gcode_macro Z_TILT]
gcode:
    Z_TILT_ADJUST

[gcode_macro PURGE_LINE]
gcode:
    M117 Purging filament...
    G92 E0;
    G90
    G0 X5 Y5 F6000
    G0 Z0.4
    G91
    G1 X60 E10 F600;
    G1 Y1
    G1 X-60 E10 F600;
    G92 E0;
    G90

[gcode_macro PRINT_START]
gcode:
    SET_FAN_SPEED FAN=ebay_fan SPEED=0.31

    M117 Homing...
    G28 Y0 X0 Z0
    Z_TILT_ADJUST
    G28 Z
    
    M117 Bed Mesh Calibration...
    BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=5
    
    M117 Recovering temp...
    {% set EXT_TEMP = params.EXTRUDER|int %}
    M109 S{ EXT_TEMP }
    
    PURGE_LINE
    
    G1 Z15.0 F600 ;move the platform down 15mm
    G1 X82 Y82 F3000
    G92 E0 ;zero the extruded length again
    G1 F9000
    M117 Printing...

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear

    BED_MESH_CLEAR
    
    SET_FAN_SPEED FAN=ebay_fan SPEED=0
    M117 Finished!

[gcode_macro _HOME_X]
gcode:
    # Home
    G28 X
    # Move away
    G91
    G1 X-5 F2000
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000
[gcode_macro _HOME_Y]
gcode:
    # Home
    G28 Y
    # Move away
    G91
    G1 Y-5 F2000

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    #Home
    #G28

	# Go to starting position
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			
			# Box
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_min+10} Y{y_max-30} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			G0 X{x_max-30} Y{y_min+10} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 
	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED
    G0 X115 Y115 Z30

#NEMA 17 BIPOLAR STEPPER MOTOR, KL17H248-15-4A, 76 oz-in
#Shaft: 5mm diameter with flat
#Current Per Phase: 1.5A
#Holding Torque: 5.5Kg.cm (76 oz-in)
#Rated Voltage: 4.2V
#NO.of Phase: 2
#Step Angle: 1.8° ± 5%
#Resistance Per Phase: 2.8Ω± 10%
#Inductance Per Phase: 4.8mH± 20%
#Insulation Class: Class B
#Dielectric Strength: 100Mohm
#Operation Temp Range: -20 ~ +40° C
#Lead Wire: 22AWG / 750mm with connector to stepper motor driver
#Red- 1A
#Green- 1B
#Yellow- 2A
#Blue- 2B

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.860
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 50.132
#*# pid_ki = 1.943
#*# pid_kd = 323.351
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.098125, -0.014375, 0.011562, -0.003750, -0.062813
#*# 	  -0.044688, 0.013125, 0.031562, 0.008750, -0.034375
#*# 	  -0.050313, -0.005938, -0.021563, 0.003750, -0.044688
#*# 	  -0.057188, -0.010625, -0.010938, -0.028125, -0.056875
#*# 	  -0.183750, -0.131563, -0.049688, 0.026875, 0.044375
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 165.0
#*# min_y = 15.0
#*# max_y = 165.0
